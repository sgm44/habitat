 p Connecting to the PostgreSQL database from Rails requires setting the database adapter value, user name, password, and host. If you use the default <code>init</code> hook created by the Ruby scaffolding, and also referenced a PostgreSQL gem in your Gemfile.lock, the Ruby scaffolding will create an <code>init</code> hook that will attempt to connect to any database you bind to. 
 
 p In the <code>habitat</code> directory inside your project repo, edit the <code>default.toml</code> to set the correct database connection information.

 pre
  code
   |
    [db]
    user = "admin"
    password = "admin"

 p By default, the Ruby scaffolding sets both the Rails and Rack #{link_to 'environment variables','/tutorials/build-your-own/define-variables/'} to 'production'. If you want to override either value, add the following to your <code>default.toml</code>:

 pre
  code
   |
    rails_env|rack_env = "development|test"

 p Also, by default, because <code>RAILS_ENV</code> is set to 'production', the database name that the scaffolding will try to connect to will be named <i>package_</i>production. If you want to override that value, add the following in the <code>db</code> TOML table:

 pre
  code 
   |
    name = "databasename"

 p Now that you have your basic connection settings, you can proceed with connecting your web application to PostgreSQL running in a container, in VMs, or in the cloud.